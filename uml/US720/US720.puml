@startuml
title US720 - As a Power User [or Administrator], I want to know the total metered energy consumption of a device in a given time interval
actor PowerUser
PowerUser -> ":EnergyConsumptionUI": runUS720();
activate ":EnergyConsumptionUI"
ref over ":EnergyConsumptionUI"
selectRoom
end ref
ref over ":EnergyConsumptionUI"
selectDevice
end ref
ref over ":EnergyConsumptionUI"
selectIntervalStart
end ref
ref over ":EnergyConsumptionUI"
selectIntervalEnd
end ref
":EnergyConsumptionUI" -> ":EnergyConsumptionController": getDeviceConsumptionInInterval(device, initialTime, finalTime)
deactivate ":EnergyConsumptionUI"
activate ":EnergyConsumptionController"
deactivate ":EnergyConsumptionController"
":EnergyConsumptionController" -> ":Device": countLogsInInterval(initialTime, finalTime)
activate ":LogList"
":Device" -> ":LogList": countLogsInInterval (initialTime, finalTime)
loop
":LogList" -> ":Log": inInterval(initialTime, finalTime)
":Log" --> ":LogList": return true
end
":Device" --> ":EnergyConsumptionController": return logCount
":EnergyConsumptionController" -> ":EnergyConsumptionUI": return logCount
activate ":Device"
deactivate ":LogList"
deactivate ":Device"
":EnergyConsumptionUI" -> ":EnergyConsumptionUI": check if logCount > 0
alt if log count = 0
":EnergyConsumptionUI" -> PowerUser: display error message
else if log count > 0
":EnergyConsumptionController" -> ":Device": getConsumptionInGivenInterval(initialTime, finalTime)
":Device" -> ":LogList": getConsumptionInInterval (initialTime, finalTime)
activate ":LogList"
activate ":Device"
":LogList" --> ":EnergyConsumptionController": return double
deactivate ":Device"
deactivate ":LogList"
":EnergyConsumptionController" -> ":EnergyConsumptionUI": build feedback String
":EnergyConsumptionUI" -> PowerUser: Display the Total\n Metered Energy \n Consumption
deactivate ":EnergyConsumptionController"
end alt
@enduml