@startuml
title US720 - As a Power User [or Administrator], I want to know the total metered energy consumption of a device in a given time interval
actor PowerUser
activate PowerUser
activate ":MainUI"
PowerUser ->":MainUI": run720(:House)
":MainUI" ->":EnergyConsumptionUI": run720(:House)
activate ":EnergyConsumptionUI"
":EnergyConsumptionUI" -> PowerUser: display selection \n options
PowerUser -> ":EnergyConsumptionUI": selectRoom
ref over ":EnergyConsumptionUI"
selectRoom
end ref
PowerUser -> ":EnergyConsumptionUI": selectDevice
ref over ":EnergyConsumptionUI"
selectDevice
end ref
":EnergyConsumptionUI" -> PowerUser: request time \n input
PowerUser -> ":EnergyConsumptionUI": setInitialTime()
ref over ":EnergyConsumptionUI"
selectTime
end ref
":EnergyConsumptionUI" -> PowerUser: request time \n input
PowerUser -> ":EnergyConsumptionUI": setFinalTime()
ref over ":EnergyConsumptionUI"
selectTime
end ref
":EnergyConsumptionUI" -> ":EnergyConsumptionController": getDeviceConsumptionInInterval(device, initialTime, finalTime)
deactivate ":EnergyConsumptionUI"
activate ":EnergyConsumptionController"
deactivate ":EnergyConsumptionController"
":EnergyConsumptionController" -> ":Device": countLogsInInterval(initialTime, finalTime)
activate ":Device"
":Device" --> ":EnergyConsumptionController": return logCount
deactivate ":Device"
":EnergyConsumptionController" -> ":EnergyConsumptionController": check if logCount > 0
":EnergyConsumptionController" -> ":Device": getConsumptionWithinGivenInterval(initialTime, finalTime)
activate ":Device"
":Device" --> ":EnergyConsumptionController": return double
deactivate ":Device"
":EnergyConsumptionController" -> ":EnergyConsumptionController": build feedback String
":EnergyConsumptionController" -> PowerUser: Display the Total\n Metered Energy \n Consumption
deactivate ":EnergyConsumptionController"
deactivate ":MainUI"
@enduml