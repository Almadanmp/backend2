@startuml

skinparam titleBorderRoundCorner 10
skinparam titleBorderThickness 3
skinparam titleBorderColor indianred
skinparam titleBackgroundColor ivory
skinparam FontName quicksand

skinparam actor {
  BorderColor indianred
  }

skinparam sequence {
  LifeLineBackgroundColor indianred
  ParticipantBackgroundColor ivory
}

skinparam roundcorner 10

skinparam component {
  arrowThickness 1
  ArrowFontName Verdana
  ArrowColor indianred
  ArrowFontColor darkslategrey
}

title Add Readings To Geographic Area Sensors
GASettingsUI -> ReadingsController: addReadingsToGeographicAreaSensors\n(List<ReadingDTO> readingDTOs, \nString logPath)
activate ReadingsController
ReadingsController -> ReadingMapper: List<Reading> readings = \nreadingDTOsToReadings(readingDTOs)
ReadingsController -> GeographicAreaService: addReadingsToGeographicAreaSensors\n(List<Reading> readings,\n String logPath)
activate GeographicAreaService

GeographicAreaService -> LogUtils: Logger logger = getLogger\n("areaReadingsLogger", logPath, Level.FINE)
GeographicAreaService -> ReadingUtils: List<String> sensorIDs = getSensorIDs(readings)


loop for each sensorID
GeographicAreaService -> ReadingUtils: List<Reading> subArray = getReadingsBySensorID(sensorID, readings)

GeographicAreaService -> GeographicAreaService: addedReadings = addAreaReadings\n(sensorID, subArray, logger)
ref over GeographicAreaService
Add Geographic Area Readings
end ref
end

GeographicAreaService -> ReadingsController: int addedReadings
ReadingsController -> GASettingsUI: int addedReadings

deactivate ReadingsController

@enduml