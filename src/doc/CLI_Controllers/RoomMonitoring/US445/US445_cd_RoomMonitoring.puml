@startuml

title US 445 - As a Power User or as a Room Owner, I want to have a list of the instants in which the temperature rose above the comfort level in a given time interval and category
skinparam titleBorderRoundCorner 10
skinparam titleBorderThickness 2
skinparam titleBorderColor indianred
skinparam titleBackgroundColor ivory
skinparam FontName verdana
skinparam titleFontSize 10


skinparam class {
  BorderColor indianred
  BackgroundColor indianred
  BackgroundColor ivory
   roundcorner 10
   ArrowFontName Verdana
   ArrowColor indianred
   ArrowFontColor darkslategrey
   FontSize 12
}

class RoomMonitoringController
class RoomMonitoringUI
class Mapper
class RoomService
class GeographicAreaService
class DateUtils
class InputHelperUI
class UtilsUI


MainUI -- RoomMonitoringUI : >
RoomMonitoringUI -- DateUtils : >
RoomMonitoringUI -- InputHelperUI : >
InputHelperUI -- RoomService : >
InputHelperUI -- Mapper : >
InputHelperUI -- UtilsUI : >
RoomMonitoringUI -- RoomMonitoringController : >
RoomMonitoringController -- RoomService : >
RoomService -- ReadingUtils : >
RoomMonitoringController -- GeographicAreaService : >
GeographicAreaService -- ReadingUtils : >



class RoomMonitoringController {
-getInstantsAboveComfortInterval(House,int,RoomDTO,Date,Date,RoomService,GeographicAreaService)
-buildReadingsOutput(List<Reading>, String)
}

class RoomMonitoringUI {
-runUS445(RoomService, House, GeographicAreaService)
}

class Mapper {
-objectToDTO(Room)
}

class RoomService{
-getAllRooms()
-getReadingsInInterval(Date, Date, Room)
-getTemperatureReadingsBetweenDates(Date,Date,Room)
-getRoomSensorsOfGivenType(String)
}

class GeographicAreaService{
-getGeographicAreaAverageTemperature(Date, House)
-getClosestAreaSensorOfGivenType(String,House)
-getAverageReadingsBetweenFormattedDates(Date, Date, AreaSensor)
-getReadingListBetweenFormattedDates(Date, Date, AreaSensor)
-getReadingsAboveCategoryILimit(List<Reading>, House)
-getReadingsAboveCategoryIILimit(List<Reading>, House)
-getReadingsAboveCategoryIIILimit(List<Reading>, House)
-categoryICalculusTemperaturesAboveAverage(Reading, double)
-categoryIICalculusTemperaturesAboveAverage(Reading, double)
-categoryIIICalculusTemperaturesAboveAverage(Reading, double)
}

class DateUtils {
-getInputYearMonthDayHourMin()
}

class InputHelperUI {
-getRoomDTOByList(roomService)
-getHouseRoomByList(roomService, List<Room>)
}

class UtilsUI {
-selectCategory()
}

class ReadingUtils {
-isReadingDateBetweenTwoDates(Date, Date, Date)
-getValuesOfSpecificDayReadings(List<Reading>, Date)
-getAvgFromList(List<double>)
}


@enduml