@startuml
skinparam titleBorderRoundCorner 10
skinparam titleBorderThickness 3
skinparam titleBorderColor indianred
skinparam titleBackgroundColor ivory
skinparam FontName quicksand

skinparam actor {
 	BorderColor indianred
 	}

 skinparam sequence {
 	LifeLineBackgroundColor indianred
 	ParticipantBackgroundColor ivory
 }

 skinparam roundcorner 10

 skinparam component {
   arrowThickness 1
   ArrowFontName Verdana
   ArrowColor indianred
   ArrowFontColor darkslategrey
 }
title US 440 - As a Power User or as a Room Owner, I want to have a list of the instants in which the temperature fell below the comfort level in a given time interval and category
autonumber
actor "Power User"
"Power User" -> ":RoomMonitoringUI": runUS440(RoomService, House, GeographicAreaService)
activate ":RoomMonitoringUI"
":RoomMonitoringUI" -> ":RoomMonitoringUI" : updateAndDisplayUS440(RoomService, House, GeographicAreaService)
ref over ":RoomMonitoringUI"
Select Room
end ref
ref over ":RoomMonitoringUI"
Select Starting Date
end ref
ref over ":RoomMonitoringUI"
Select Ending Date
end ref
ref over ":RoomMonitoringUI"
Select Comfort Category
end ref
":RoomMonitoringUI" -> ":RoomMonitoringController": getInstantsBelowComfortInterval(House,Category,RoomDTO,StartingDate,EndingDate\n,RoomService,GeographicAreaService)
activate ":RoomMonitoringController"
":RoomMonitoringController" -> RoomMapper: dtoToObject(RoomDTO)
create "room:Room"
activate RoomMapper
RoomMapper ->> "room:Room": new
deactivate RoomMapper
activate "room:Room"
"room:Room" --> ":RoomMonitoringController": return room
deactivate "room:Room"
":RoomMonitoringController" -> ":RoomService": getReadingsInInterval(StartingDate,EndingDate,Room)
activate ":RoomService"
":RoomService" --> ":RoomMonitoringController": return List<Reading> readingValues
deactivate ":RoomService"

alt if Category = 0
":RoomMonitoringController" -> ":GeographicAreaService": getReadingsBelowCategoryILimit(readingValues, house)
":GeographicAreaService" --> ":RoomMonitoringController": return List<Reading> finalReadings
ref over ":RoomMonitoringController"
getReadingsBelowCategoryILimit()
end ref
else if Category = 1
":RoomMonitoringController" -> ":GeographicAreaService": getReadingsBelowCategoryILimit(readingValues, house)
":GeographicAreaService" --> ":RoomMonitoringController": return List<Reading> finalReadings
ref over ":RoomMonitoringController"
getReadingsBelowCategoryIILimit()
end ref
else if Category = 2
":RoomMonitoringController" -> ":GeographicAreaService": getReadingsBelowCategoryILimit(readingValues, house)
":GeographicAreaService" --> ":RoomMonitoringController": return List<Reading> finalReadings
ref over ":RoomMonitoringController"
getReadingsBelowCategoryIILimit()
end ref
end
":RoomMonitoringController" -> ":RoomMonitoringController": String output = outputUS440(finalReadings)
":RoomMonitoringController" --> ":RoomMonitoringUI": return output
deactivate ":RoomMonitoringController"
":RoomMonitoringUI" --> "Power User": List of moments when temperature fell \n below the comfort value
deactivate ":RoomMonitoringUI"
@enduml