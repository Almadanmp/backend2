@startuml

title US 440 - As a Power User or as a Room Owner, I want to have a list of the instants in which the temperature fell below the comfort level in a given time interval and category
skinparam titleBorderRoundCorner 10
skinparam titleBorderThickness 2
skinparam titleBorderColor indianred
skinparam titleBackgroundColor ivory
skinparam FontName verdana
skinparam titleFontSize 10


skinparam class {
  BorderColor indianred
  BackgroundColor indianred
  BackgroundColor ivory
   roundcorner 10
   ArrowFontName Verdana
   ArrowColor indianred
   ArrowFontColor darkslategrey
   FontSize 12
}

class RoomMonitoringController
class RoomMonitoringUI
class Mapper
class RoomService
class GeographicAreaService
class DateUtils
class InputHelperUI
class UtilsUI


MainUI -- RoomMonitoringUI : >
RoomMonitoringUI -- DateUtils : >
RoomMonitoringUI -- InputHelperUI : >
InputHelperUI -- RoomService : >
InputHelperUI -- Mapper : >
InputHelperUI -- UtilsUI : >
RoomMonitoringUI -- RoomMonitoringController : >
RoomMonitoringController -- RoomService : >
RoomService -- ReadingUtils : >
RoomMonitoringController -- GeographicAreaService : >
GeographicAreaService -- ReadingUtils : >



class RoomMonitoringController {
getInstantsBelowComfortInterval(House house, int category, RoomDTO roomDTO, Date startDate, Date endDate, RoomService roomService, GeographicAreaService geographicAreaService)
buildReadingDTOListOutputUS440(allReadings)

}

class RoomMonitoringUI {
runUS440(RoomService roomService, House house, GeographicAreaService geographicAreaService)
updateAndDisplayUS440(RoomService roomService, House house, GeographicAreaService geographicAreaService)
}

class Mapper {
objectToDTO(room)
}

class RoomService{
getAllRooms()
getReadingsInInterval(Date startDate, Date endDate, Room room)
getTemperatureReadingsBetweenDates(startDate, endDate, room)
getRoomSensorsOfGivenType("temperature")
getReadingsBelowCategoryILimit(readingValues, house)
getReadingsBelowCategoryIILimit(readingValues, house)
getReadingsBelowCategoryIIILimit(readingValues, house)
}

class GeographicAreaService{
getGeographicAreaAverageTemperature(r.getDate(),house)
getClosestAreaSensorOfGivenType("temperature",house)
getAverageReadingsBetweenFormattedDates(d1, d2, houseClosestSensor)
getReadingListBetweenFormattedDates(Date initialDate, Date finalDate, AreaSensor areaSensor)
}

class DateUtils {
getInputYearMonthDayHourMin()
}

class InputHelperUI {
getRoomDTOByList(roomService)
getHouseRoomByList(roomService, rooms)
}

class UtilsUI {
selectCategory()
}

class ReadingUtils {
isReadingDateBetweenTwoDates(readingDate, initialDate, finalDate)
getValuesOfSpecificDayReadings(sensorReadingsBetweenDates, day)
getAvgFromList(specificDayValues)
}


@enduml