@startuml

skinparam titleBorderRoundCorner 10
skinparam titleBorderThickness 3
skinparam titleBorderColor indianred
skinparam titleBackgroundColor ivory
skinparam FontName quicksand

skinparam actor {
  BorderColor indianred
  }

skinparam sequence {
  LifeLineBackgroundColor indianred
  ParticipantBackgroundColor ivory
}

skinparam roundcorner 10

skinparam component {
  arrowThickness 1
  ArrowFontName Verdana
  ArrowColor indianred
  ArrowFontColor darkslategrey
}



title ReadingDTOWrapper Conversion To ReadingDTO

-> Adapter: readingDTOWrapperConversion\n(List<ReadingDTOWrapper>)
activate "Adapter"


loop for each ReadingDTOWrapper

Adapter -> String: startUnit = wrapper.getUnit();
Adapter -> Double: startValue = wrapper.getValue();

Adapter -> UnitHelper: Unit startUnit convertStringToUnit(startUnit)
activate UnitHelper
Adapter -> UnitHelper: Unit defaultUnit =  convertUnitToSystemDefault(startUnit)
deactivate UnitHelper

Adapter -> Adapter: double endValue = convertToSystemDefault(startValue, startUnit)

Adapter -> ":readingDTO": new ReadingDTO();
activate ":readingDTO"
Adapter -> ":readingDTO": setValue(endValue)
Adapter -> ":readingDTO": setUnit(defaultUnit)
Adapter -> ":readingDTO": setDate(wrapper.getDate())
Adapter -> ":readingDTO": setSensorId(wrapper.getSensorId())
deactivate ":readingDTO"

end

<- Adapter: List<ReadingDTO>
deactivate "Adapter"

@enduml