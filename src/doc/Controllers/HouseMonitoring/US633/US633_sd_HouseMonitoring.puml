@startuml
skinparam titleBorderRoundCorner 10
skinparam titleBorderThickness 3
skinparam titleBorderColor indianred
skinparam titleBackgroundColor ivory
skinparam FontName quicksand

skinparam actor {
  BorderColor indianred
  }

skinparam sequence {
  LifeLineBackgroundColor indianred
  ParticipantBackgroundColor ivory
}

skinparam roundcorner 10

skinparam component {
  arrowThickness 1
  ArrowFontName Verdana
  ArrowColor indianred
  ArrowFontColor darkslategrey
}

title US633 \n I want to get the day with the highest temperature amplitude in the house area in a given period \n - Success Case -

autonumber

actor User

User -> ":MainUI": Start program
activate ":MainUI"

":MainUI" --> User: Show option menu
User-> ":MainUI": Select House Monitoring opt
":MainUI" -> ":HouseMonitoringUI": option6(house)
deactivate ":MainUI"
activate ":HouseMonitoringUI"
":HouseMonitoringUI" --> User: Show option menu
User -> ":HouseMonitoringUI": Select opt
":HouseMonitoringUI" -> ":HouseMonitoringUI": runUS623(house)

ref over ":HouseMonitoringUI"
get input start
and end date
end ref

":HouseMonitoringUI" -> ":HouseMonitoringUI": updateUS623(house, date, date)
ref over ":HouseMonitoringUI"
Get closest sensor
to house area
end ref

":HouseMonitoringUI" -> ":HouseMonitoringController": getHighestTempAmplitudeDate\n                 (house, date, date)
deactivate ":HouseMonitoringUI"
activate ":HouseMonitoringController"
":HouseMonitoringController" -> ":Sensor": getDateHighestAmplitudeBetweenDates\n                                   (date, date)

activate ":Sensor"

":Sensor" -> ":ReadingList": getDateHighestAmplitudeBetweenDates\n                                    (date, date)
activate ":ReadingList"

":ReadingList" --> ":Sensor": return date
deactivate ":ReadingList"
":Sensor" --> ":HouseMonitoringController": return date
deactivate ":Sensor"

":HouseMonitoringController" --> ":HouseMonitoringUI": return date
deactivate ":HouseMonitoringController"
activate ":HouseMonitoringUI"
":HouseMonitoringUI" -> ":HouseMonitoringController": getHighestTempAmplitudeValue\n                       (house, date)
deactivate ":HouseMonitoringUI"
activate ":HouseMonitoringController"

":HouseMonitoringController" -> ":Sensor": getHighestTempAmplitudeValue\n                                  (date, date)
activate ":Sensor"
":Sensor" -> ":ReadingList": getHighestAmplitudeInDate\n                                (date, date)

activate ":ReadingList"



":ReadingList" --> ":Sensor": return double
deactivate ":ReadingList"
":Sensor" --> ":HouseMonitoringController": return double
deactivate ":Sensor"

":HouseMonitoringController" --> ":HouseMonitoringUI": return double
deactivate ":HouseMonitoringController"
activate ":HouseMonitoringUI"

":HouseMonitoringUI" -> ":HouseMonitoringUI": build result string

":HouseMonitoringUI" --> User: Show result string
deactivate ":HouseMonitoringUI"

deactivate ":MainUI"


@enduml