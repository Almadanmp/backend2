@startuml
title US633 Class Diagram

skinparam titleBorderRoundCorner 10
skinparam titleBorderThickness 2
skinparam titleBorderColor indianred
skinparam titleBackgroundColor ivory
skinparam FontName verdana

skinparam class {
 	BorderColor indianred
 	BackgroundColor indianred
 	BackgroundColor ivory
    roundcorner 10
    ArrowFontName Verdana
    ArrowColor indianred
    ArrowFontColor darkslategrey
 }

class House
MainUI -- HouseMonotoringUI : >
HouseMonotoringUI -- InputUtils : >
HouseMonotoringUI -- HouseMonotoringController : >
HouseMonotoringController -- House : >
House "1" -- "1" GeographicArea : has >
GeographicArea "1" -- "1" SensorList : has >
SensorList -- Sensor
Sensor "n" -- "1" Location: is in >
Sensor "n" -- "1" TypeSensor: has >
Sensor -- ReadingList

class HouseMonotoringUI {
runUS633(House)
getStartDate()
getEndDate()
updateAndDisplayUS633()
}

class InputUtils{
getInputYearMonthDay()
}

class HouseMonotoringController {
getHighestTempAmplitudeDate()
getHighestTempAmplitudeValue()
}

class House{
motherArea;

getClosestSensorOfGivenType(String)
getMinDistanceToSensorOfGivenType(String)
}

class GeographicArea{
SensorList;

getSensorsOfGivenType()
}

class SensorList{
List<Sensor> sensors
ReadingList readingList

getSensorListByType(String)
getSensorsByDistanceToHouse(House, double)
getMostRecentlyUsedSensor()
getMostRecentReadingDate()
}

class Sensor{
TypeSensor;
Local;

getSensorTypeName()
getDistanceToHouse(House)
getLinearDistanceBetweenLocalsInKm(Location)
getDateHighestAmplitudeBetweenDates(Date, Date)
}

class TypeSensor{
name;

getName()
}



class Location{
double latitude;
double longitude;

getLinearDistanceBetweenLocalsInKm(Location)
}

class ReadingList{
List<Reading> readings;

getMostRecentReadingDate()
getMostRecentReading()
getDateHighestAmplitudeBetweenDates(Date, Date)
getDaysWithReadingsBetweenDates(Date, Date)
getFirstSecondOfDay(Date)
getLastSecondOfDay(Date)
isReadingDateBetweenTwoDates(Date, Date, Date)
getAmplitudeValueFromDate(Date)
getValuesOfSpecificDayReadings(Date)
compareDayMonthAndYearBetweenDates(Date, Date)


}

@enduml