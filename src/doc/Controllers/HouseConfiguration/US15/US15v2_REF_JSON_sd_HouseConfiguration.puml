@startuml
title US015v2 \n REF JSON file.
skinparam titleBorderRoundCorner 10
skinparam titleBorderThickness 3
skinparam titleBorderColor indianred
skinparam titleBackgroundColor ivory
skinparam FontName quicksand

skinparam actor {
  BorderColor indianred
  }

skinparam sequence {
  LifeLineBackgroundColor indianred
  ParticipantBackgroundColor ivory
}

skinparam roundcorner 10

skinparam component {
  arrowThickness 1
  ArrowFontName Verdana
  ArrowColor indianred
  ArrowFontColor darkslategrey
}

InputHelperUI -> ReaderController: readJSONFileAndAddGeoAreas(filePath)
activate InputHelperUI
activate ReaderController
ReaderController -> ReaderJSONGeographicAreas: readFile(filePath)
deactivate ReaderController
activate ReaderJSONGeographicAreas

ReaderJSONGeographicAreas->ReaderJSONGeographicAreas:getJSONArray("geographical_area")
ReaderJSONGeographicAreas --> ReaderController: return JSONArray
deactivate ReaderJSONGeographicAreas
activate ReaderController
loop successs
ReaderController->ReaderController:getJSONObject()
create ":GeographicArea"
ReaderController -->> ":GeographicArea": create
activate ":GeographicArea"
deactivate ReaderController
":GeographicArea" --> ReaderController: return GeographicArea[]
deactivate ":GeographicArea"

activate ReaderController
end loop
loop success
ReaderController -> GeographicAreaList: add(geoArea)
deactivate ReaderController

activate GeographicAreaList

GeographicAreaList-->ReaderController: return true
deactivate GeographicAreaList

activate ReaderController
end loop
ReaderController --> InputHelperUI: return int
deactivate ReaderController
deactivate InputHelperUI

@enduml