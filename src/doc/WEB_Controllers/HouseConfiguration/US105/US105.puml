@startuml
skinparam titleBorderRoundCorner 10
skinparam titleBorderThickness 3
skinparam titleBorderColor indianred
skinparam titleBackgroundColor ivory
skinparam FontName quicksand

skinparam actor {
 	BorderColor indianred
 	}

 skinparam sequence {
 	LifeLineBackgroundColor indianred
 	ParticipantBackgroundColor ivory
}

 skinparam roundcorner 10

 skinparam component {
   arrowThickness 1
   ArrowFontName Verdana
   ArrowColor indianred
   ArrowFontColor darkslategrey
 }
title US 105 - As an Http Client I want to add a new room to the house

actor "Http Client"
activate "Http Client"
"Http Client" -> "HouseConfigurationWebController":  Post ".../houseSettings/room": createRoom(RoomDTO)
activate "HouseConfigurationWebController"
"HouseConfigurationWebController" -> "HouseConfigurationWebController": isRoomDTOWebValid(RoomDTOWeb)
alt if room DTO is valid
"HouseConfigurationWebController" -> "Http Client": new ResponseEntity<>(success message, HttpStatus.OK)
else if room is NOT valid
"HouseConfigurationWebController" -> "Http Client": new ResponseEntity<>(failed message, HttpStatus.BAD_REQUEST)
end

"HouseConfigurationWebController" -> "HouseRoomService": addRoomDTOWebToHouse(RoomDTOWeb)

alt if room is Added
"HouseConfigurationWebController" -> "Http Client": new ResponseEntity<>(success message, HttpStatus.OK)
else if room is NOT Added
"HouseConfigurationWebController" -> "Http Client": new ResponseEntity<>(failed message, HttpStatus.CONFLICT)
deactivate "HouseConfigurationWebController"
deactivate "Http Client"
end
@enduml