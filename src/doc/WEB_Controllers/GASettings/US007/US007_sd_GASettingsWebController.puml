@startuml
skinparam titleBorderRoundCorner 10
skinparam titleBorderThickness 3
skinparam titleBorderColor indianred
skinparam titleBackgroundColor snow
skinparam FontName quicksand

skinparam actor {
 	BorderColor indianred
 	backgroundColor Snow
 	}

 skinparam sequence {
 	LifeLineBackgroundColor indianred
 	ParticipantBackgroundColor snow
}

 skinparam roundcorner 10

 skinparam component {
   arrowThickness 1
   ArrowFontName Verdana
   ArrowColor indianred
   ArrowFontColor darkslategrey
 }
title US 011 - As as Administrator I want to remove a sensor so that it will no longer be used.
autonumber
actor "Admin"
"Admin" ->> ":HTTPClient":  Input data to put daughter area on mother area
activate ":HTTPClient"
":HTTPClient" ->> ":SpringResolver": Put ("...areas/{idMother}")
activate ":SpringResolver"
":SpringResolver" ->> ":GASettingsWebController": addDaughterArea(Long idAreaDaughter, Long idAreaMother)
deactivate ":SpringResolver"
activate ":GASettingsWebController"
":GASettingsWebController" ->> ":GeographicAreaRepository": addDaughterArea(Long idAreaDaughter, Long idAreaMother)
alt success
activate ":GeographicAreaRepository"
":GeographicAreaRepository" ->> "GeographicAreaCrudRepository": findByID(Long idAreaMother)
activate "GeographicAreaCrudRepository"
"GeographicAreaCrudRepository" -->> ":GeographicAreaRepository": return :geographicAreaMother
":GeographicAreaRepository" ->> "GeographicAreaCrudRepository": findById(Long idAreaDaughter)
"GeographicAreaCrudRepository" -->> ":GeographicAreaRepository": return :geographicAreaDaughter
deactivate "GeographicAreaCrudRepository"

":GeographicAreaRepository" ->> ":geographicAreaMother": contains(geographicAreaDaughter)
activate ":geographicAreaMother"
":geographicAreaMother" -->> ":GeographicAreaRepository": return false
":GeographicAreaRepository" ->> ":geographicAreaMother": add(geographicAreaDaughter)
deactivate ":geographicAreaMother"
deactivate ":GeographicAreaRepository"
create ":ResponseEntity"
":GASettingsWebController" ->> ":ResponseEntity": create(String body, HttpStatus.OK);
activate ":ResponseEntity"
deactivate ":GASettingsWebController"
":ResponseEntity" -->> ":HTTPClient": ResponseEntity
deactivate ":ResponseEntity"
else if geographicAreaDaughter already contained in geographicAreaMother
activate ":GeographicAreaRepository"

":GeographicAreaRepository" ->> "GeographicAreaCrudRepository": findByID(Long idAreaMother)
activate "GeographicAreaCrudRepository"
"GeographicAreaCrudRepository" -->> ":GeographicAreaRepository": return :geographicAreaMother
":GeographicAreaRepository" ->> "GeographicAreaCrudRepository": findById(Long idAreaDaughter)
"GeographicAreaCrudRepository" -->> ":GeographicAreaRepository": return :geographicAreaDaughter
deactivate "GeographicAreaCrudRepository"
":GeographicAreaRepository" ->> ":geographicAreaMother": contains(geographicAreaDaughter)
activate ":geographicAreaMother"
":geographicAreaMother" -->> ":GeographicAreaRepository": return true
deactivate ":geographicAreaMother"
deactivate ":GeographicAreaRepository"
":GASettingsWebController" ->> ":ResponseEntity": create(String body, HttpStatus.CONFLICT);
activate ":ResponseEntity"
":ResponseEntity" -->> ":HTTPClient": ResponseEntity
deactivate ":ResponseEntity"
else if GeographicArea isn't present
activate ":GeographicAreaRepository"

":GeographicAreaRepository" ->> "GeographicAreaCrudRepository": findByID(Long idArea)
activate "GeographicAreaCrudRepository"
"GeographicAreaCrudRepository" -->> ":GeographicAreaRepository": return :false
deactivate "GeographicAreaCrudRepository"
deactivate ":GeographicAreaRepository"
":GASettingsWebController" ->> ":ResponseEntity": create(String body, HttpStatus.NOT_FOUND);
activate ":ResponseEntity"

":ResponseEntity" -->> ":HTTPClient": ResponseEntity
deactivate ":HTTPClient"
deactivate ":ResponseEntity"
end


@enduml