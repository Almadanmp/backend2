@startuml
skinparam titleBorderRoundCorner 10
skinparam titleBorderThickness 3
skinparam titleBorderColor indianred
skinparam titleBackgroundColor ivory
skinparam FontName quicksand

skinparam actor {
 	BorderColor indianred
 	}

 skinparam sequence {
 	LifeLineBackgroundColor indianred
 	ParticipantBackgroundColor ivory
}

 skinparam roundcorner 10

 skinparam component {
   arrowThickness 1
   ArrowFontName Verdana
   ArrowColor indianred
   ArrowFontColor darkslategrey
 }
title US130 - As an Administrator, I want to create a energy grid, so that I can define the rooms that \n are attached to it and the contracted maximum power for that grid.

actor "Http Client"
activate "Http Client"
"Http Client" -> "SpringResolver":  Post ".../gridSettings/grids"
activate "SpringResolver"
"SpringResolver" -> "EnergyGridSettingsWebController": createEnergyGrid(EnergyGridDTO)
deactivate "SpringResolver"
activate "EnergyGridSettingsWebController"
"EnergyGridSettingsWebController" -> "EnergyGridSettingsWebController": validateEnergyGridDTO
alt if EnergyGridDTO is valid
"EnergyGridSettingsWebController" -> "EnergyGridRepository": createEnergyGrid(EnergyGridDTO)
activate "EnergyGridRepository"
"EnergyGridRepository" -> "EnergyGridMapper": EnergyGrid = dtoToObjectEmptyLists(EnergyGridDTO)
activate "EnergyGridMapper"
create ":EnergyGrid"
"EnergyGridMapper" ->>":EnergyGrid": creates
activate ":EnergyGrid"
"EnergyGridMapper" --> "EnergyGridRepository": return EnergyGrid:
deactivate "EnergyGridMapper"
"EnergyGridRepository" -> "EnergyGridCrudRepository":findAll()
activate "EnergyGridCrudRepository"
"EnergyGridCrudRepository" --> "EnergyGridRepository": return List<EnergyGrid>
"EnergyGridRepository" -> ":EnergyGrid": getName()
":EnergyGrid" --> "EnergyGridRepository": return String
deactivate ":EnergyGrid"
"EnergyGridRepository" -> "EnergyGridCrudRepository": findByName(String)
"EnergyGridCrudRepository" --> "EnergyGridRepository": return EnergyGrid
"EnergyGridRepository" -> "EnergyGridCrudRepository": save(energyGrid)
deactivate "EnergyGridCrudRepository"
alt if EnergyGrid is saved
"EnergyGridRepository" --> "EnergyGridSettingsWebController": return true
"EnergyGridSettingsWebController" --> "Http Client": new ResponseEntity<>(success message,\n HttpStatus.CREATED)
else if EnergyGrid is not saved
"EnergyGridRepository" --> "EnergyGridSettingsWebController": return false
deactivate "EnergyGridRepository"

"EnergyGridSettingsWebController" --> "Http Client": new ResponseEntity<>(fail message,\n HttpStatus.CONFLICT)
end
else if EnergyGridDTO is not valid
"EnergyGridSettingsWebController" --> "Http Client": new ResponseEntity<>(fail message,\n HttpStatus.CONFLICT)
deactivate "Http Client"
deactivate "EnergyGridSettingsWebController"
end

@enduml