@startuml
title US610 Class Diagram - Web Controller Version

skinparam titleBorderRoundCorner 10
skinparam titleBorderThickness 2
skinparam titleBorderColor indianred
skinparam titleBackgroundColor Snow
skinparam FontName quicksand
skinparam titleFontSize 10
skinparam roundcorner 10


skinparam class {
 BorderColor indianred
 BackgroundColor indianred
 BackgroundColor Snow
  roundcorner 10
  ArrowFontName Verdana
  ArrowColor indianred
  ArrowFontColor darkslategrey
  FontSize 12
}



HTTPClient -- RoomMonitoringWebController : >
RoomMonitoringWebController -- RoomRepository : >
RoomMonitoringWebController -- DateWithRoomIdDTO : >
RoomRepository -- Room : >
RoomRepository -- RoomCrudRepo : >
Room -- RoomSensor :May \n have >
Room -- ReadingUtils : Uses >
RoomCrudRepo -left- Room : >
RoomSensor -- Reading :May \n have >
ReadingUtils -- Reading : >

class RoomMonitoringWebController {
RoomRepository;
getRoomMaxTempInDay(DateWithRoomIdDTO)
}

class DateWithRoomIdDTO{
Date date;
String roomId;
getDate()
getRoomId()
isDateValid()
}

class Room{
List<RoomSensor> roomSensors;
getMaxTemperatureOnGivenDay(Date)
getRoomSensorsOfGivenType(String)
getValuesOfSpecificDayReadings(List<RoomSensor>, Date)
}

class Reading{
Date date;
double value;
getDate()
getValue()
}

class RoomRepository{
getRoomMaxTempById(String, Date)
}

class RoomCrudRepo{
findByRoomName(String)
}

class RoomSensor{
String sensorType;
List<Reading> readings;
getSensorType()
getReadings()
}

class ReadingUtils{
getValuesOfSpecificDayReadings(List<Reading>, Date)
compareDayMonthAndYearBetweenDays(Date, Date)
getReadingDate(List<Reading>, int)
getReadingValue(List<Reading>, int)
}

@enduml